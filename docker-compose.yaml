services:
  gateway:
    extends:
      file: gateway/docker-compose-base.yaml
      service: gateway
    image: ghcr.io/misarch/gateway:main
    ports:
      - "8080:8080"
  gateway-dapr:
    extends:
      file: gateway/docker-compose-base.yaml
      service: gateway-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  gateway-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=gateway
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:gateway"

  frontend:
    extends:
      file: frontend/docker-compose-base.yaml
      service: frontend
    image: ghcr.io/misarch/frontend:main
    ports:
      - "4000:80"
    depends_on:
      - keycloak
  frontend-dapr:
    extends:
      file: frontend/docker-compose-base.yaml
      service: frontend-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  frontend-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=frontend
      - APP_PORT=80
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:frontend"

  catalog:
    extends:
      file: catalog/docker-compose-base.yaml
      service: catalog
    image: ghcr.io/misarch/catalog:main
  catalog-db:
    extends:
      file: catalog/docker-compose-base.yaml
      service: catalog-db
  catalog-dapr:
    extends:
      file: catalog/docker-compose-base.yaml
      service: catalog-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  catalog-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=catalog
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:catalog"

  wishlist:
    extends:
      file: wishlist/docker-compose-base.yaml
      service: wishlist
    image: ghcr.io/misarch/wishlist:main
  wishlist-db:
    extends:
      file: wishlist/docker-compose-base.yaml
      service: wishlist-db
  wishlist-dapr:
    extends:
      file: wishlist/docker-compose-base.yaml
      service: wishlist-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  wishlist-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=wishlist
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:wishlist"

  shoppingcart:
    extends:
      file: shoppingcart/docker-compose-base.yaml
      service: shoppingcart
    image: ghcr.io/misarch/shoppingcart:main
  shoppingcart-db:
    extends:
      file: shoppingcart/docker-compose-base.yaml
      service: shoppingcart-db
  shoppingcart-dapr:
    extends:
      file: shoppingcart/docker-compose-base.yaml
      service: shoppingcart-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  shoppingcart-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=shoppingcart
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:shoppingcart"

  notification:
    extends:
      file: notification/docker-compose-base.yaml
      service: notification
    image: ghcr.io/misarch/notification:main
  notification-db:
    extends:
      file: notification/docker-compose-base.yaml
      service: notification-db
  notification-dapr:
    extends:
      file: notification/docker-compose-base.yaml
      service: notification-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  notification-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=notification
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:notification"

  user:
    extends:
      file: user/docker-compose-base.yaml
      service: user
    image: ghcr.io/misarch/user:main
  user-db:
    extends:
      file: user/docker-compose-base.yaml
      service: user-db
  user-dapr:
    extends:
      file: user/docker-compose-base.yaml
      service: user-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  user-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=user
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:user"

  keycloak:
    extends:
      file: keycloak/docker-compose-base.yaml
      service: keycloak
    image: ghcr.io/misarch/keycloak:main
    ports:
      - "8081:80"
  keycloak-db:
    extends:
      file: keycloak/docker-compose-base.yaml
      service: keycloak-db
  keycloak-dapr:
    extends:
      file: keycloak/docker-compose-base.yaml
      service: keycloak-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  keycloak-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=keycloak
      - APP_PORT=80
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:keycloak"

  inventory:
    extends:
      file: inventory/docker-compose-base.yaml
      service: inventory
    image: ghcr.io/misarch/inventory:main
  inventory-db:
    extends:
      file: inventory/docker-compose-base.yaml
      service: inventory-db
  inventory-mongosetup:
    extends:
      file: inventory/docker-compose-base.yaml
      service: mongosetup
  inventory-dapr:
    extends:
      file: inventory/docker-compose-base.yaml
      service: inventory-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  inventory-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=inventory
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:inventory"

  tax:
    extends:
      file: tax/docker-compose-base.yaml
      service: tax
    image: ghcr.io/misarch/tax:main
  tax-db:
    extends:
      file: tax/docker-compose-base.yaml
      service: tax-db
  tax-dapr:
    extends:
      file: tax/docker-compose-base.yaml
      service: tax-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  tax-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=tax
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:tax"

  review:
    extends:
      file: review/docker-compose-base.yaml
      service: review
    image: ghcr.io/misarch/review:main
  review-db:
    extends:
      file: review/docker-compose-base.yaml
      service: review-db
  review-dapr:
    extends:
      file: review/docker-compose-base.yaml
      service: review-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  review-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=review
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:review"
  
  address:
    extends:
      file: address/docker-compose-base.yaml
      service: address
    image: ghcr.io/misarch/address:main
  address-db:
    extends:
      file: address/docker-compose-base.yaml
      service: address-db
  address-dapr:
    extends:
      file: address/docker-compose-base.yaml
      service: address-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  address-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=address
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:address"
  
  discount:
    extends:
      file: discount/docker-compose-base.yaml
      service: discount
    image: ghcr.io/misarch/discount:main
  discount-db:
    extends:
      file: discount/docker-compose-base.yaml
      service: discount-db
  discount-dapr:
    extends:
      file: discount/docker-compose-base.yaml
      service: discount-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  discount-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=discount
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:discount"
  
  shipment:
    extends:
      file: shipment/docker-compose-base.yaml
      service: shipment
    image: ghcr.io/misarch/shipment:main
    environment:
      - MISARCH_SHIPMENT_PROVIDER_ENDPOINT=http://simulation:8080/shipment/register
  shipment-db:
    extends:
      file: shipment/docker-compose-base.yaml
      service: shipment-db
  shipment-dapr:
    extends:
      file: shipment/docker-compose-base.yaml
      service: shipment-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  shipment-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=shipment
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:shipment"
  
  return:
    extends:
      file: return/docker-compose-base.yaml
      service: return
    image: ghcr.io/misarch/return:main
  return-db:
    extends:
      file: return/docker-compose-base.yaml
      service: return-db
  return-dapr:
    extends:
      file: return/docker-compose-base.yaml
      service: return-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  return-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=return
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:return"

  payment:
    extends:
      file: payment/docker-compose-base.yaml
      service: payment
    image: ghcr.io/misarch/payment:main
    environment:
      PAYMENT_PROVIDER_URL: http://simulation:8080/payment/register 
  payment-db:
    extends:
      file: payment/docker-compose-base.yaml
      service: payment-db
  payment-dapr:
    extends:
      file: payment/docker-compose-base.yaml
      service: payment-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  payment-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=payment
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:payment"

  order:
    extends:
      file: order/docker-compose-base.yaml
      service: order
    image: ghcr.io/misarch/order:main
  order-db:
    extends:
      file: order/docker-compose-base.yaml
      service: order-db
  order-dapr:
    extends:
      file: order/docker-compose-base.yaml
      service: order-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  order-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=order
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:order"

  simulation:
    extends:
      file: simulation/docker-compose-base.yaml
      service: simulation
    image: ghcr.io/misarch/simulation:main
    ports:
      - "8090:8080"
  simulation-rabbitmq:
    extends:
      file: simulation/docker-compose-base.yaml
      service: simulation-rabbitmq
  simulation-dapr:
    extends:
      file: simulation/docker-compose-base.yaml
      service: simulation-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  simulation-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=simulation
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:simulation"

  media:
    extends:
      file: media/docker-compose-base.yaml
      service: media
    image: ghcr.io/misarch/media:main
    environment:
      MINIO_ENDPOINT: http://media-minio:9000
  media-minio:
    extends:
      file: media/docker-compose-base.yaml
      service: media-minio
  media-dapr:
    extends:
      file: media/docker-compose-base.yaml
      service: media-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  media-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=media
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:media"

  invoice:
    extends:
      file: invoice/docker-compose-base.yaml
      service: invoice
    image: ghcr.io/misarch/invoice:main
  invoice-db:
    extends:
      file: invoice/docker-compose-base.yaml
      service: invoice-db
  invoice-dapr:
    extends:
      file: invoice/docker-compose-base.yaml
      service: invoice-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  invoice-ecs:
    extends:
      file: experiment-config-sidecar/docker-compose-base.yaml
      service: experiment-config-sidecar
    image: ghcr.io/misarch/experiment-config-sidecar:main
    environment:
      - SERVICE_NAME=invoice
      - ASPNETCORE_HTTP_PORTS=$EXPERIMENT_CONFIG_SIDECAR_PORT
    network_mode: "service:invoice"
  
  experiment-config:
    extends:
      file: experiment-config/docker-compose-base.yaml
      service: experiment-config
    image: ghcr.io/misarch/experiment-config:main
    ports:
      - "3000:8080"
  experiment-config-dapr:
    extends:
      file: experiment-config/docker-compose-base.yaml
      service: experiment-config-dapr
    volumes:
      - "./.dapr/dapr-config.yaml:/config.yaml"
      - "./.dapr/components:/components"
  experiment-config-frontend:
    extends:
      file: experiment-config-frontend/docker-compose-base.yaml
      service: experiment-config-frontend
    image: ghcr.io/misarch/experiment-config-frontend:main
    environment:
      - EXPERIMENT_CONFIG_ENDPOINT=experiment-config:8080
    ports:
      - "4200:80"

  testdata:
    extends:
      file: testdata/docker-compose-base.yaml
      service: testdata
    image: ghcr.io/misarch/testdata:main
    environment:
      GRAPHQL_ENDPOINT: "http://gateway:8080/graphql"
      KEYCLOAK_URL: "http://keycloak:80/keycloak"
      REALM: "Misarch"
      ADMIN_USER: "admin"
      ADMIN_PASS: "admin"
      ADMIN_CLIENT_ID: "admin-cli"
      CLIENT_ID: "frontend"
      GATLING_USERNAME: "gatling"
      GATLING_PASSWORD: "123"
      GRANT_TYPE: "password"
      INIT_IDLE: true
    depends_on:
      - keycloak
      - user
      - user-dapr

  experiment-executor-frontend:
    extends:
      file: experiment-executor-frontend/docker-compose-base.yaml
      service: experiment-executor-frontend
    #image: ghcr.io/misarch/experiment-executor-frontend:main
    ports:
      - "5173:80"

  experiment-executor:
    extends:
      file: experiment-executor/docker-compose-base.yaml
      service: experiment-executor
    image: ghcr.io/misarch/experiment-executor:main
    ports:
      - "8888:8888"
    volumes:
      - experiment-executor-data:/home/java/tests
    environment:
      GRAFANA_ADMIN_USER: "admin"
      GRAFANA_ADMIN_PASSWORD: "admin"
      GRAFANA_HOST: "http://grafana:3000"
      EXPERIMENT_EXECUTOR_URL: "http://experiment-executor:8888"
      GATLING_EXECUTOR_HOST: "http://gatling-executor:8889"
      MISARCH_EXPERIMENT_CONFIG_HOST: "http://experiment-config:8080"
      CHAOSTOOLKIT_EXECUTOR_HOST: "http://chaostoolkit-executor:8890"
      INFLUXDB_URL: "http://influxdb:8086/api/v2/write?org=misarch&bucket=gatling&precision=ms"
      INFLUXDB_TOKEN: "my-secret-token"
      STORE_RESULT_DATA_IN_FILES: "false"
      USE_MISARCH_EXPERIMENT_CONFIG: "true"
      IS_KUBERNETES: "false"

  chaostoolkit-executor:
    extends:
      file: chaostoolkit-executor/docker-compose-base.yaml
      service: chaostoolkit-executor
    image: ghcr.io/misarch/chaostoolkit-executor:main
    environment:
      EXPERIMENT_EXECUTOR_URL: "http://experiment-executor:8888"
    ports:
      - "8890:8890"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  gatling-executor:
    extends:
      file: gatling-executor/docker-compose-base.yaml
      service: gatling-executor
    image: ghcr.io/misarch/gatling-executor:main
    ports:
      - "8889:8889"
    environment:
      EXPERIMENT_EXECUTOR_URL: "http://experiment-executor:8888"

  placement:
    image: daprio/dapr
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"

  dapr-redis:
    image: redis
    command: redis-server --requirepass redis
    volumes:
      - redis-data:/var/lib/redis/data
    ports:
      - "6379:6379"

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector:0.67.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    depends_on:
      - prometheus
      - zipkin-all-in-one
    ports:
      - "4317:4317"
      - "4318:4318"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  cadvisor:
    image: ghcr.io/misarch/cadvisor:v0.53.1-fix
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /var/run/containerd/containerd.sock:/var/run/containerd/containerd.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=misarch
      - DOCKER_INFLUXDB_INIT_BUCKET=gatling
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-secret-token

volumes:
  catalog-db-data:
  wishlist-db-data:
  redis-data:
  shoppingcart-db-data:
  notification-db-data:
  user-db-data:
  inventory-db-data:
  keycloak-db-data:
  tax-db-data:
  review-db-data:
  address-db-data:
  discount-db-data:
  shipment-db-data:
  return-db-data:
  payment-db-data:
  order-db-data:
  media-minio-data:
  invoice-db-data:
  cadvisor-data:
  influxdb-data:
  grafana-data:
  experiment-executor-data:
